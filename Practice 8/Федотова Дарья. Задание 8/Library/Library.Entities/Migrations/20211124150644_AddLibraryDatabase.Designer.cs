// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Library.Entities.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20211124150644_AddLibraryDatabase")]
    partial class AddLibraryDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Book", b =>
                {
                    b.Property<int>("Isbn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<int>("PagesNum");

                    b.Property<string>("PubName");

                    b.Property<int>("PubYear");

                    b.Property<string>("Title");

                    b.HasKey("Isbn");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("BookCat", b =>
                {
                    b.Property<int>("Isbn");

                    b.Property<string>("CategoryName");

                    b.HasKey("Isbn", "CategoryName");

                    b.ToTable("BookCat");
                });

            modelBuilder.Entity("Borrowing", b =>
                {
                    b.Property<int>("ReaderNr");

                    b.Property<int>("Isbn");

                    b.Property<int>("CopyNumber");

                    b.Property<DateTime>("ReturnDate");

                    b.HasKey("ReaderNr", "Isbn", "CopyNumber");

                    b.ToTable("Borrowing");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<string>("CategoryName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ParentCatCategoryName");

                    b.HasKey("CategoryName");

                    b.HasIndex("ParentCatCategoryName");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Copy", b =>
                {
                    b.Property<int>("Isbn");

                    b.Property<int>("CopyNumber");

                    b.Property<int>("ShelfPosition");

                    b.HasKey("Isbn", "CopyNumber");

                    b.ToTable("Copy");
                });

            modelBuilder.Entity("Publisher", b =>
                {
                    b.Property<string>("PubName")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PubAddress");

                    b.HasKey("PubName");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Reader");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.HasOne("Category", "ParentCat")
                        .WithMany()
                        .HasForeignKey("ParentCatCategoryName");
                });
#pragma warning restore 612, 618
        }
    }
}
